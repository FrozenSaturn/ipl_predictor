# Generated by Django 5.2 on 2025-05-02 09:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    # dependencies = []

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Player's full name", max_length=200),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Official team name", max_length=100, unique=True
                    ),
                ),
                (
                    "short_name",
                    models.CharField(
                        blank=True,
                        help_text="Common abbreviation (e.g., CSK, MI)",
                        max_length=10,
                        null=True,
                        unique=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("city", models.CharField(max_length=100)),
                ("country", models.CharField(default="India", max_length=100)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "match_id_source",
                    models.IntegerField(
                        help_text="Unique ID from the source data (e.g., Match_Info.csv ID)",
                        unique=True,
                    ),
                ),
                (
                    "season",
                    models.IntegerField(help_text="IPL Season year (e.g., 2023)"),
                ),
                ("date", models.DateField(help_text="Date the match was played")),
                (
                    "match_number",
                    models.IntegerField(
                        blank=True,
                        help_text="Match number within the season/tournament",
                        null=True,
                    ),
                ),
                (
                    "toss_decision",
                    models.CharField(
                        blank=True,
                        choices=[("bat", "Bat"), ("field", "Field")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "result_type",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 'runs', 'wickets', 'tie', 'no result'",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "result_margin",
                    models.IntegerField(
                        blank=True,
                        help_text="Margin of victory (runs or wickets)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "team1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_matches",
                        to="predictor_api.team",
                    ),
                ),
                (
                    "team2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="away_matches",
                        to="predictor_api.team",
                    ),
                ),
                (
                    "toss_winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="toss_wins",
                        to="predictor_api.team",
                    ),
                ),
                (
                    "winner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="match_wins",
                        to="predictor_api.team",
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="predictor_api.venue",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Matches",
                "ordering": ["-date", "-match_number"],
            },
        ),
    ]
